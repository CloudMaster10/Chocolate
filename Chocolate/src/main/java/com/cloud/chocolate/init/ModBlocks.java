package com.cloud.chocolate.init;

import java.util.Arrays;
import java.util.List;

import com.cloud.chocolate.Chocolate;
import com.cloud.chocolate.block.CandleBlock;
import com.cloud.chocolate.block.PalmFrondsBlock;
import com.cloud.chocolate.block.PalmSaplingBlock;
import com.cloud.chocolate.block.ShortGrassBlock;
import com.cloud.chocolate.block.trees.PalmTree;
import com.cloud.chocolate.block.trees.SakuraTree;

import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.block.DoorBlock;
import net.minecraft.block.FenceBlock;
import net.minecraft.block.FenceGateBlock;
import net.minecraft.block.FlowerPotBlock;
import net.minecraft.block.GlassBlock;
import net.minecraft.block.LeavesBlock;
import net.minecraft.block.PaneBlock;
import net.minecraft.block.PressurePlateBlock;
import net.minecraft.block.RotatedPillarBlock;
import net.minecraft.block.SaplingBlock;
import net.minecraft.block.SlabBlock;
import net.minecraft.block.SoundType;
import net.minecraft.block.StainedGlassBlock;
import net.minecraft.block.StainedGlassPaneBlock;
import net.minecraft.block.StairsBlock;
import net.minecraft.block.TrapDoorBlock;
import net.minecraft.block.WallBlock;
import net.minecraft.block.WoodButtonBlock;
import net.minecraft.block.material.Material;
import net.minecraft.block.material.MaterialColor;
import net.minecraft.client.renderer.RenderType;
import net.minecraft.client.renderer.RenderTypeLookup;
import net.minecraft.item.BlockItem;
import net.minecraft.item.DyeColor;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraftforge.common.ToolType;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;

@Mod.EventBusSubscriber(modid = Chocolate.MOD_ID, bus = Mod.EventBusSubscriber.Bus.MOD)
public class ModBlocks
{	
	public static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, Chocolate.MOD_ID);
	
	// Soul Sandstone
	public static final RegistryObject<Block> SOUL_SANDSTONE = BLOCKS.register("soul_sandstone", () -> new Block(Block.Properties.create(Material.ROCK, MaterialColor.BROWN).hardnessAndResistance(0.8F).harvestTool(ToolType.PICKAXE)));                                                                                                                                                                                                                                  
	public static final RegistryObject<Block> SOUL_SANDSTONE_SLAB = BLOCKS.register("soul_sandstone_slab", () -> new SlabBlock(Block.Properties.from(SOUL_SANDSTONE.get())));                                                                                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> SOUL_SANDSTONE_STAIRS = BLOCKS.register("soul_sandstone_stairs", () -> new StairsBlock(() -> SOUL_SANDSTONE.get().getDefaultState(), Block.Properties.from(SOUL_SANDSTONE.get())));                                                                                                                                                                                                                                                       
	public static final RegistryObject<Block> SOUL_SANDSTONE_WALL = BLOCKS.register("soul_sandstone_wall", () -> new WallBlock(Block.Properties.from(SOUL_SANDSTONE.get())));                                                                                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> CHISELED_SOUL_SANDSTONE = BLOCKS.register("chiseled_soul_sandstone", () -> new Block(Block.Properties.from(SOUL_SANDSTONE.get())));                                                                                                                                                                                                                                                                                                 
	public static final RegistryObject<Block> CUT_SOUL_SANDSTONE = BLOCKS.register("cut_soul_sandstone", () -> new Block(Block.Properties.from(SOUL_SANDSTONE.get())));                                                                                                                                                                                                                                                                                                           
	public static final RegistryObject<Block> CUT_SOUL_SANDSTONE_SLAB = BLOCKS.register("cut_soul_sandstone_slab", () -> new SlabBlock(Block.Properties.from(SOUL_SANDSTONE.get())));                                                                                                                                                                                                                                                                                             
	public static final RegistryObject<Block> SMOOTH_SOUL_SANDSTONE = BLOCKS.register("smooth_soul_sandstone", () -> new Block(Block.Properties.from(SOUL_SANDSTONE.get())));                                                                                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> SMOOTH_SOUL_SANDSTONE_SLAB = BLOCKS.register("smooth_soul_sandstone_slab", () -> new SlabBlock(Block.Properties.from(SOUL_SANDSTONE.get())));                                                                                                                                                                                                                                                                                       
	public static final RegistryObject<Block> SMOOTH_SOUL_SANDSTONE_STAIRS = BLOCKS.register("smooth_soul_sandstone_stairs", () -> new StairsBlock(() -> SMOOTH_SOUL_SANDSTONE.get().getDefaultState(), Block.Properties.from(SOUL_SANDSTONE.get())));                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
    // Bamboo                                                                                                                                                                                          
	public static final RegistryObject<Block> BAMBOO_BLOCK = BLOCKS.register("bamboo_block", () -> new RotatedPillarBlock(Block.Properties.create(Material.BAMBOO, MaterialColor.GRASS).hardnessAndResistance(1.0F).sound(SoundType.BAMBOO)));                                                                                                                                                                                                                              
	public static final RegistryObject<Block> BAMBOO_SLAB = BLOCKS.register("bamboo_slab", () -> new SlabBlock(Block.Properties.from(BAMBOO_BLOCK.get())));                                                                                                                                                                                                                                                                                                                       
	public static final RegistryObject<Block> BAMBOO_STAIRS = BLOCKS.register("bamboo_stairs", () -> new StairsBlock(() -> BAMBOO_BLOCK.get().getDefaultState(), Block.Properties.from(BAMBOO_BLOCK.get())));                                                                                                                                                                                                                                                                           
	public static final RegistryObject<Block> BAMBOO_FENCE = BLOCKS.register("bamboo_fence", () -> new FenceBlock(Block.Properties.from(BAMBOO_BLOCK.get())));                                                                                                                                                                                                                                                                                                                    
	public static final RegistryObject<Block> BAMBOO_FENCE_GATE = BLOCKS.register("bamboo_fence_gate", () -> new FenceGateBlock(Block.Properties.from(BAMBOO_BLOCK.get())));                                                                                                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
	public static final RegistryObject<Block> DRIED_BAMBOO_BLOCK = BLOCKS.register("dried_bamboo_block", () -> new RotatedPillarBlock(Block.Properties.create(Material.BAMBOO, MaterialColor.SAND).hardnessAndResistance(1.0F).sound(SoundType.BAMBOO)));                                                                                                                                                                                                                   
	public static final RegistryObject<Block> DRIED_BAMBOO_SLAB = BLOCKS.register("dried_bamboo_slab", () -> new SlabBlock(Block.Properties.from(DRIED_BAMBOO_BLOCK.get())));                                                                                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> DRIED_BAMBOO_STAIRS = BLOCKS.register("dried_bamboo_stairs", () -> new StairsBlock(() -> DRIED_BAMBOO_BLOCK.get().getDefaultState(), Block.Properties.from(DRIED_BAMBOO_BLOCK.get())));                                                                                                                                                                                                                                                   
	public static final RegistryObject<Block> DRIED_BAMBOO_FENCE = BLOCKS.register("dried_bamboo_fence", () -> new FenceBlock(Block.Properties.from(DRIED_BAMBOO_BLOCK.get())));                                                                                                                                                                                                                                                                                                  
	public static final RegistryObject<Block> DRIED_BAMBOO_FENCE_GATE = BLOCKS.register("dried_bamboo_fence_gate", () -> new FenceGateBlock(Block.Properties.from(DRIED_BAMBOO_BLOCK.get())));                                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
	// Palm                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
	public static final RegistryObject<Block> PALM_SAPLING = BLOCKS.register("palm_sapling", () -> new PalmSaplingBlock(new PalmTree(), Block.Properties.from(Blocks.OAK_SAPLING)));                                                                                                                                                                                                                                                                                            
	public static final RegistryObject<Block> PALM_FRONDS = BLOCKS.register("palm_fronds", () -> new PalmFrondsBlock(Block.Properties.from(Blocks.OAK_LEAVES)));                                                                                                                                                                                                                                                                                                                
	public static final RegistryObject<Block> PALM_LOG = BLOCKS.register("palm_log", () -> Blocks.createLogBlock(MaterialColor.WHITE_TERRACOTTA, MaterialColor.LIGHT_GRAY_TERRACOTTA));                                                                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> PALM_WOOD = BLOCKS.register("palm_wood", () -> new RotatedPillarBlock(Block.Properties.create(Material.WOOD, MaterialColor.LIGHT_GRAY_TERRACOTTA).hardnessAndResistance(2.0F).sound(SoundType.WOOD)));                                                                                                                                                                                                                        
	public static final RegistryObject<Block> STRIPPED_PALM_LOG = BLOCKS.register("stripped_palm_log", () -> Blocks.createLogBlock(MaterialColor.WHITE_TERRACOTTA, MaterialColor.WHITE_TERRACOTTA));                                                                                                                                                                                                                                                                        
	public static final RegistryObject<Block> STRIPPED_PALM_WOOD = BLOCKS.register("stripped_palm_wood", () -> new RotatedPillarBlock(Block.Properties.from(STRIPPED_PALM_LOG.get())));                                                                                                                                                                                                                                                                                           
	public static final RegistryObject<Block> PALM_PLANKS = BLOCKS.register("palm_planks", () -> new Block(Block.Properties.create(Material.WOOD, MaterialColor.WHITE_TERRACOTTA).hardnessAndResistance(2.0F, 3.0F).sound(SoundType.WOOD)));                                                                                                                                                                                                                                
	public static final RegistryObject<Block> PALM_SLAB = BLOCKS.register("palm_slab", () -> new SlabBlock(Block.Properties.from(PALM_PLANKS.get())));                                                                                                                                                                                                                                                                                                                            
	public static final RegistryObject<Block> PALM_STAIRS = BLOCKS.register("palm_stairs", () -> new StairsBlock(() -> PALM_PLANKS.get().getDefaultState(), Block.Properties.from(PALM_PLANKS.get())));                                                                                                                                                                                                                                                                                 
	public static final RegistryObject<Block> PALM_FENCE = BLOCKS.register("palm_fence", () -> new FenceBlock(Block.Properties.from(PALM_PLANKS.get())));                                                                                                                                                                                                                                                                                                                         
	public static final RegistryObject<Block> PALM_FENCE_GATE = BLOCKS.register("palm_fence_gate", () -> new FenceGateBlock(Block.Properties.from(PALM_PLANKS.get())));                                                                                                                                                                                                                                                                                                                 
	public static final RegistryObject<Block> PALM_DOOR = BLOCKS.register("palm_door", () -> new DoorBlock(Block.Properties.create(Material.WOOD, MaterialColor.WHITE_TERRACOTTA).hardnessAndResistance(3.0F).sound(SoundType.WOOD).notSolid()));                                                                                                                                                                                                                                 
	public static final RegistryObject<Block> PALM_TRAPDOOR = BLOCKS.register("palm_trapdoor", () -> new TrapDoorBlock(Block.Properties.create(Material.WOOD, MaterialColor.WHITE_TERRACOTTA).hardnessAndResistance(3.0F).sound(SoundType.WOOD).notSolid()));                                                                                                                                                                                                                     
	public static final RegistryObject<Block> PALM_BUTTON = BLOCKS.register("palm_button", () -> new WoodButtonBlock(Block.Properties.create(Material.MISCELLANEOUS).doesNotBlockMovement().hardnessAndResistance(0.5F).sound(SoundType.WOOD)));                                                                                                                                                                                                                                  
	public static final RegistryObject<Block> PALM_PRESSURE_PLATE = BLOCKS.register("palm_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, Block.Properties.create(Material.WOOD, MaterialColor.WHITE_TERRACOTTA).doesNotBlockMovement().hardnessAndResistance(0.5F).sound(SoundType.WOOD)));                                                                                                                                             
	public static final RegistryObject<Block> POTTED_PALM_SAPLING = BLOCKS.register("potted_palm_sapling", () -> new FlowerPotBlock(PALM_SAPLING.get(), Block.Properties.from(Blocks.FLOWER_POT)));                                                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
	// Sakura                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
	public static final RegistryObject<Block> SAKURA_SAPLING = BLOCKS.register("sakura_sapling", () -> new SaplingBlock(new SakuraTree(), Block.Properties.create(Material.PLANTS, MaterialColor.PINK).doesNotBlockMovement().tickRandomly().hardnessAndResistance(0.0F).sound(SoundType.PLANT)) {});                                                                                                                                                                           
	public static final RegistryObject<Block> SAKURA_BLOSSOMS = BLOCKS.register("sakura_blossoms", () -> new LeavesBlock(Block.Properties.create(Material.LEAVES, MaterialColor.PINK).hardnessAndResistance(0.2F).tickRandomly().sound(SoundType.PLANT).notSolid()));                                                                                                                                                                                                           
	public static final RegistryObject<Block> SAKURA_LOG = BLOCKS.register("sakura_log", () -> Blocks.createLogBlock(MaterialColor.PINK_TERRACOTTA, MaterialColor.GRAY));                                                                                                                                                                                                                                                                                                   
	public static final RegistryObject<Block> SAKURA_WOOD = BLOCKS.register("sakura_wood", () -> new RotatedPillarBlock(Block.Properties.create(Material.WOOD, MaterialColor.GRAY).hardnessAndResistance(2.0F).sound(SoundType.WOOD)));                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> STRIPPED_SAKURA_LOG = BLOCKS.register("stripped_sakura_log", () -> Blocks.createLogBlock(MaterialColor.PINK_TERRACOTTA, MaterialColor.PINK_TERRACOTTA));                                                                                                                                                                                                                                                                      
	public static final RegistryObject<Block> STRIPPED_SAKURA_WOOD = BLOCKS.register("stripped_sakura_wood", () -> new RotatedPillarBlock(Block.Properties.from(STRIPPED_SAKURA_LOG.get())));                                                                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> SAKURA_PLANKS = BLOCKS.register("sakura_planks", () -> new Block(Block.Properties.create(Material.WOOD, MaterialColor.PINK_TERRACOTTA).hardnessAndResistance(2.0F, 3.0F).sound(SoundType.WOOD)));                                                                                                                                                                                                                             
	public static final RegistryObject<Block> SAKURA_SLAB = BLOCKS.register("sakura_slab", () -> new SlabBlock(Block.Properties.from(SAKURA_PLANKS.get())));                                                                                                                                                                                                                                                                                                                      
	public static final RegistryObject<Block> SAKURA_STAIRS = BLOCKS.register("sakura_stairs", () -> new StairsBlock(() -> SAKURA_PLANKS.get().getDefaultState(), Block.Properties.from(SAKURA_PLANKS.get())));                                                                                                                                                                                                                                                                         
	public static final RegistryObject<Block> SAKURA_FENCE = BLOCKS.register("sakura_fence", () -> new FenceBlock(Block.Properties.from(SAKURA_PLANKS.get())));                                                                                                                                                                                                                                                                                                                   
	public static final RegistryObject<Block> SAKURA_FENCE_GATE = BLOCKS.register("sakura_fence_gate", () -> new FenceGateBlock(Block.Properties.from(SAKURA_PLANKS.get())));                                                                                                                                                                                                                                                                                                           
	public static final RegistryObject<Block> SAKURA_DOOR = BLOCKS.register("sakura_door", () -> new DoorBlock(Block.Properties.create(Material.WOOD, MaterialColor.PINK_TERRACOTTA).hardnessAndResistance(3.0F).sound(SoundType.WOOD).notSolid()));                                                                                                                                                                                                                              
	public static final RegistryObject<Block> SAKURA_TRAPDOOR = BLOCKS.register("sakura_trapdoor", () -> new TrapDoorBlock(Block.Properties.create(Material.WOOD, MaterialColor.PINK_TERRACOTTA).hardnessAndResistance(3.0F).sound(SoundType.WOOD).notSolid()));                                                                                                                                                                                                                  
	public static final RegistryObject<Block> SAKURA_BUTTON = BLOCKS.register("sakura_button", () -> new WoodButtonBlock(Block.Properties.create(Material.MISCELLANEOUS).doesNotBlockMovement().hardnessAndResistance(0.5F).sound(SoundType.WOOD)));                                                                                                                                                                                                                              
	public static final RegistryObject<Block> SAKURA_PRESSURE_PLATE = BLOCKS.register("sakura_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, Block.Properties.create(Material.WOOD, MaterialColor.PINK_TERRACOTTA).doesNotBlockMovement().hardnessAndResistance(0.5F).sound(SoundType.WOOD)));                                                                                                                                          
	public static final RegistryObject<Block> POTTED_SAKURA_SAPLING = BLOCKS.register("potted_sakura_sapling", () -> new FlowerPotBlock(SAKURA_SAPLING.get(), Block.Properties.from(Blocks.FLOWER_POT)));                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
    // Framed Glass                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
	public static final RegistryObject<Block> FRAMED_GLASS = BLOCKS.register("framed_glass", () -> new GlassBlock(Block.Properties.create(Material.GLASS).hardnessAndResistance(0.6F).sound(SoundType.GLASS).notSolid()));                                                                                                                                                                                                                                                  
	public static final RegistryObject<Block> FRAMED_WHITE_STAINED_GLASS = BLOCKS.register("framed_white_stained_glass", () -> new StainedGlassBlock(DyeColor.WHITE, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                                 
	public static final RegistryObject<Block> FRAMED_ORANGE_STAINED_GLASS = BLOCKS.register("framed_orange_stained_glass", () -> new StainedGlassBlock(DyeColor.ORANGE, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                              
	public static final RegistryObject<Block> FRAMED_MAGENTA_STAINED_GLASS = BLOCKS.register("framed_magenta_stained_glass", () -> new StainedGlassBlock(DyeColor.MAGENTA, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                           
	public static final RegistryObject<Block> FRAMED_LIGHT_BLUE_STAINED_GLASS = BLOCKS.register("framed_light_blue_stained_glass", () -> new StainedGlassBlock(DyeColor.LIGHT_BLUE, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                  
	public static final RegistryObject<Block> FRAMED_YELLOW_STAINED_GLASS = BLOCKS.register("framed_yellow_stained_glass", () -> new StainedGlassBlock(DyeColor.YELLOW, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                              
	public static final RegistryObject<Block> FRAMED_LIME_STAINED_GLASS = BLOCKS.register("framed_lime_stained_glass", () -> new StainedGlassBlock(DyeColor.LIME, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                                    
	public static final RegistryObject<Block> FRAMED_PINK_STAINED_GLASS = BLOCKS.register("framed_pink_stained_glass", () -> new StainedGlassBlock(DyeColor.PINK, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                                    
	public static final RegistryObject<Block> FRAMED_GRAY_STAINED_GLASS = BLOCKS.register("framed_gray_stained_glass", () -> new StainedGlassBlock(DyeColor.GRAY, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                                    
	public static final RegistryObject<Block> FRAMED_LIGHT_GRAY_STAINED_GLASS = BLOCKS.register("framed_light_gray_stained_glass", () -> new StainedGlassBlock(DyeColor.LIGHT_GRAY, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                  
	public static final RegistryObject<Block> FRAMED_CYAN_STAINED_GLASS = BLOCKS.register("framed_cyan_stained_glass", () -> new StainedGlassBlock(DyeColor.CYAN, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                                    
	public static final RegistryObject<Block> FRAMED_PURPLE_STAINED_GLASS = BLOCKS.register("framed_purple_stained_glass", () -> new StainedGlassBlock(DyeColor.PURPLE, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                              
	public static final RegistryObject<Block> FRAMED_BLUE_STAINED_GLASS = BLOCKS.register("framed_blue_stained_glass", () -> new StainedGlassBlock(DyeColor.BLUE, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                                    
	public static final RegistryObject<Block> FRAMED_BROWN_STAINED_GLASS = BLOCKS.register("framed_brown_stained_glass", () -> new StainedGlassBlock(DyeColor.BROWN, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                                 
	public static final RegistryObject<Block> FRAMED_GREEN_STAINED_GLASS = BLOCKS.register("framed_green_stained_glass", () -> new StainedGlassBlock(DyeColor.GREEN, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                                 
	public static final RegistryObject<Block> FRAMED_RED_STAINED_GLASS = BLOCKS.register("framed_red_stained_glass", () -> new StainedGlassBlock(DyeColor.RED, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                                       
	public static final RegistryObject<Block> FRAMED_BLACK_STAINED_GLASS = BLOCKS.register("framed_black_stained_glass", () -> new StainedGlassBlock(DyeColor.BLACK, Block.Properties.from(FRAMED_GLASS.get())));                                                                                                                                                                                                                                                                 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
	public static final RegistryObject<Block> FRAMED_GLASS_PANE = BLOCKS.register("framed_glass_pane", () -> new PaneBlock(Block.Properties.create(Material.GLASS).hardnessAndResistance(0.6F).sound(SoundType.GLASS).notSolid()) {});                                                                                                                                                                                                                                          
	public static final RegistryObject<Block> FRAMED_WHITE_STAINED_GLASS_PANE = BLOCKS.register("framed_white_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.WHITE, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                                  
	public static final RegistryObject<Block> FRAMED_ORANGE_STAINED_GLASS_PANE = BLOCKS.register("framed_orange_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.ORANGE, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                               
	public static final RegistryObject<Block> FRAMED_MAGENTA_STAINED_GLASS_PANE = BLOCKS.register("framed_magenta_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.MAGENTA, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                            
	public static final RegistryObject<Block> FRAMED_LIGHT_BLUE_STAINED_GLASS_PANE = BLOCKS.register("framed_light_blue_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.LIGHT_BLUE, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                   
	public static final RegistryObject<Block> FRAMED_YELLOW_STAINED_GLASS_PANE = BLOCKS.register("framed_yellow_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.YELLOW, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                               
	public static final RegistryObject<Block> FRAMED_LIME_STAINED_GLASS_PANE = BLOCKS.register("framed_lime_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.LIME, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> FRAMED_PINK_STAINED_GLASS_PANE = BLOCKS.register("framed_pink_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.PINK, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> FRAMED_GRAY_STAINED_GLASS_PANE = BLOCKS.register("framed_gray_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.GRAY, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> FRAMED_LIGHT_GRAY_STAINED_GLASS_PANE = BLOCKS.register("framed_light_gray_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.LIGHT_GRAY, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                   
	public static final RegistryObject<Block> FRAMED_CYAN_STAINED_GLASS_PANE = BLOCKS.register("framed_cyan_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.CYAN, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> FRAMED_PURPLE_STAINED_GLASS_PANE = BLOCKS.register("framed_purple_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.PURPLE, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                               
	public static final RegistryObject<Block> FRAMED_BLUE_STAINED_GLASS_PANE = BLOCKS.register("framed_blue_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.BLUE, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                                     
	public static final RegistryObject<Block> FRAMED_BROWN_STAINED_GLASS_PANE = BLOCKS.register("framed_brown_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.BROWN, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                                  
	public static final RegistryObject<Block> FRAMED_GREEN_STAINED_GLASS_PANE = BLOCKS.register("framed_green_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.GREEN, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                                  
	public static final RegistryObject<Block> FRAMED_RED_STAINED_GLASS_PANE = BLOCKS.register("framed_red_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.RED, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                                        
	public static final RegistryObject<Block> FRAMED_BLACK_STAINED_GLASS_PANE = BLOCKS.register("framed_black_stained_glass_pane", () -> new StainedGlassPaneBlock(DyeColor.BLACK, Block.Properties.from(FRAMED_GLASS_PANE.get())));                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
	// Miscellaneous                                                                                                                                                                                                                                    
	public static final RegistryObject<Block> CANDLE = BLOCKS.register("candle", () -> new CandleBlock(Block.Properties.create(Material.CLAY, MaterialColor.GOLD).hardnessAndResistance(0.2F).setLightLevel((p_235447_0_) -> { return 12; }).sound(SoundType.CLOTH)));                                                                                                                                                                                                                    
	public static final RegistryObject<Block> SHORT_GRASS = BLOCKS.register("short_grass", () -> new ShortGrassBlock(Block.Properties.from(Blocks.GRASS)));                                                                                                           

	@SubscribeEvent
	public static void registerBlockItems(RegistryEvent.Register<Item> event) {
		List<RegistryObject<? extends Block>> buildingBlocks = Arrays.asList(
				SOUL_SANDSTONE, SOUL_SANDSTONE_SLAB, SOUL_SANDSTONE_STAIRS, SOUL_SANDSTONE_WALL, CHISELED_SOUL_SANDSTONE, CUT_SOUL_SANDSTONE, CUT_SOUL_SANDSTONE_SLAB, SMOOTH_SOUL_SANDSTONE, SMOOTH_SOUL_SANDSTONE_SLAB, SMOOTH_SOUL_SANDSTONE_STAIRS,
				BAMBOO_BLOCK, BAMBOO_SLAB, BAMBOO_STAIRS, BAMBOO_FENCE, DRIED_BAMBOO_BLOCK, DRIED_BAMBOO_SLAB, DRIED_BAMBOO_STAIRS, DRIED_BAMBOO_FENCE,
				PALM_LOG, PALM_WOOD, STRIPPED_PALM_LOG, STRIPPED_PALM_WOOD, PALM_PLANKS, PALM_SLAB, PALM_STAIRS, PALM_FENCE,
				SAKURA_LOG, SAKURA_WOOD, STRIPPED_SAKURA_LOG, STRIPPED_SAKURA_WOOD, SAKURA_PLANKS, SAKURA_SLAB, SAKURA_STAIRS, SAKURA_FENCE,
				FRAMED_GLASS, FRAMED_WHITE_STAINED_GLASS, FRAMED_ORANGE_STAINED_GLASS, FRAMED_MAGENTA_STAINED_GLASS, FRAMED_LIGHT_BLUE_STAINED_GLASS, FRAMED_YELLOW_STAINED_GLASS, FRAMED_LIME_STAINED_GLASS, FRAMED_PINK_STAINED_GLASS, FRAMED_GRAY_STAINED_GLASS,
				FRAMED_LIGHT_GRAY_STAINED_GLASS, FRAMED_CYAN_STAINED_GLASS, FRAMED_PURPLE_STAINED_GLASS, FRAMED_BLUE_STAINED_GLASS, FRAMED_BROWN_STAINED_GLASS, FRAMED_GREEN_STAINED_GLASS, FRAMED_RED_STAINED_GLASS, FRAMED_BLACK_STAINED_GLASS
				);
		
		List<RegistryObject<? extends Block>> decorations = Arrays.asList(
				PALM_SAPLING, PALM_FRONDS,
				SAKURA_SAPLING, SAKURA_BLOSSOMS,
				FRAMED_GLASS_PANE, FRAMED_WHITE_STAINED_GLASS_PANE, FRAMED_ORANGE_STAINED_GLASS_PANE, FRAMED_MAGENTA_STAINED_GLASS_PANE, FRAMED_LIGHT_BLUE_STAINED_GLASS_PANE, FRAMED_YELLOW_STAINED_GLASS_PANE, FRAMED_LIME_STAINED_GLASS_PANE, FRAMED_PINK_STAINED_GLASS_PANE, FRAMED_GRAY_STAINED_GLASS_PANE,
				FRAMED_LIGHT_GRAY_STAINED_GLASS_PANE, FRAMED_CYAN_STAINED_GLASS_PANE, FRAMED_PURPLE_STAINED_GLASS_PANE, FRAMED_BLUE_STAINED_GLASS_PANE, FRAMED_BROWN_STAINED_GLASS_PANE, FRAMED_GREEN_STAINED_GLASS_PANE, FRAMED_RED_STAINED_GLASS_PANE, FRAMED_BLACK_STAINED_GLASS_PANE,
				CANDLE, SHORT_GRASS
				);
		
		List<RegistryObject<? extends Block>> redstone = Arrays.asList(
				BAMBOO_FENCE_GATE, DRIED_BAMBOO_FENCE_GATE,
				PALM_FENCE_GATE, PALM_TRAPDOOR, PALM_BUTTON, PALM_PRESSURE_PLATE,
				SAKURA_FENCE_GATE, SAKURA_TRAPDOOR, SAKURA_BUTTON, SAKURA_PRESSURE_PLATE
				);
		
		List<RegistryObject<? extends Block>> doors = Arrays.asList(
				PALM_DOOR, SAKURA_DOOR
				);
		
		for (RegistryObject<? extends Block> block : buildingBlocks) {
			ForgeRegistries.ITEMS.register(new BlockItem(block.get(), new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.get().getRegistryName()));
		}
		
		for (RegistryObject<? extends Block> block : decorations) {
			ForgeRegistries.ITEMS.register(new BlockItem(block.get(), new Item.Properties().group(ItemGroup.DECORATIONS)).setRegistryName(block.get().getRegistryName()));
		}
		
		for (RegistryObject<? extends Block> block : redstone) {
			ForgeRegistries.ITEMS.register(new BlockItem(block.get(), new Item.Properties().group(ItemGroup.REDSTONE)).setRegistryName(block.get().getRegistryName()));
		}
		
		for (RegistryObject<? extends Block> block : doors) {
			ForgeRegistries.ITEMS.register(new BlockItem(block.get(), new Item.Properties().maxStackSize(16).group(ItemGroup.REDSTONE)).setRegistryName(block.get().getRegistryName()));
		}
	}
	
	public static void registerRendering()
	{
		RenderTypeLookup.setRenderLayer(PALM_SAPLING.get(), RenderType.getCutout());
		RenderTypeLookup.setRenderLayer(PALM_FRONDS.get(), RenderType.getCutoutMipped());
		RenderTypeLookup.setRenderLayer(PALM_DOOR.get(), RenderType.getCutout());
		RenderTypeLookup.setRenderLayer(PALM_TRAPDOOR.get(), RenderType.getCutout());
		RenderTypeLookup.setRenderLayer(POTTED_PALM_SAPLING.get(), RenderType.getCutout());
		
		RenderTypeLookup.setRenderLayer(SAKURA_SAPLING.get(), RenderType.getCutout());
		RenderTypeLookup.setRenderLayer(SAKURA_BLOSSOMS.get(), RenderType.getCutoutMipped());
		RenderTypeLookup.setRenderLayer(SAKURA_DOOR.get(), RenderType.getCutout());
		RenderTypeLookup.setRenderLayer(SAKURA_TRAPDOOR.get(), RenderType.getCutout());
		RenderTypeLookup.setRenderLayer(POTTED_SAKURA_SAPLING.get(), RenderType.getCutout());
		
		RenderTypeLookup.setRenderLayer(FRAMED_GLASS.get(), RenderType.getCutoutMipped());
		RenderTypeLookup.setRenderLayer(FRAMED_WHITE_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_ORANGE_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_MAGENTA_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_LIGHT_BLUE_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_YELLOW_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_LIME_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_PINK_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_GRAY_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_LIGHT_GRAY_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_CYAN_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_PURPLE_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_BLUE_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_BROWN_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_GREEN_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_RED_STAINED_GLASS.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_BLACK_STAINED_GLASS.get(), RenderType.getTranslucent());
		
		RenderTypeLookup.setRenderLayer(FRAMED_GLASS_PANE.get(), RenderType.getCutoutMipped());
		RenderTypeLookup.setRenderLayer(FRAMED_WHITE_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_ORANGE_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_MAGENTA_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_LIGHT_BLUE_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_YELLOW_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_LIME_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_PINK_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_GRAY_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_LIGHT_GRAY_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_CYAN_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_PURPLE_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_BLUE_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_BROWN_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_GREEN_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_RED_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		RenderTypeLookup.setRenderLayer(FRAMED_BLACK_STAINED_GLASS_PANE.get(), RenderType.getTranslucent());
		
		RenderTypeLookup.setRenderLayer(SHORT_GRASS.get(), RenderType.getCutout());
	}
}